{"version":3,"sources":["logo.svg","components/Place.js","data.js","components/Listing.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Place","props","useState","locationName","setLocationName","address","setAddress","style","border","Form","onSubmit","event","preventDefault","onAddPlace","Group","controlId","Label","Control","value","type","onChange","target","placeholder","Button","places","Listing","updateVisible","setUpdateVisible","ReviewVisible","setReviewVisible","reviewText","setReviewText","name","reviews","map","outerObject","review","variant","onClick","onDeletePlace","onUpdatePlace","addReview","as","rows","Home","addPlaceVisible","setPlaceVisible","searchTerm","setSearchTerm","searchResult","setSearchResult","allPlaces","setAllPlaces","a","copy","slice","fetch","method","body","JSON","stringify","headers","response","json","data","console","log","push","allPlacesCopy","updatePos","findIndex","place","Array","from","updatePosResult","newName","newAddress","deletePos","splice","deletePosResult","onSearch","searchText","useEffect","getPlaces","Container","fluid","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beb6948b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Container } from 'react-bootstrap'\r\n\r\nfunction Place(props) {\r\n    const [locationName, setLocationName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    return (\r\n        <div style={{ border: '2px solid black' }}>\r\n            <h3>Add a Place</h3>\r\n            <Form onSubmit={function (event) {\r\n                event.preventDefault();\r\n                props.onAddPlace(locationName, address);\r\n                setLocationName(\"\");\r\n                setAddress(\"\");\r\n            }}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control value={locationName} type=\"text\" onChange={function (event) {\r\n                        setLocationName(event.target.value)\r\n                    }}\r\n                        placeholder=\"Enter Name\" />\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control value={address} type=\"text\" onChange={function (event) {\r\n                        setAddress(event.target.value)\r\n                    }}\r\n                        placeholder=\"Address\" />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Place;","let places = [];\r\n\r\nexport default places;","import { Button, Form, Container } from 'react-bootstrap'\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction Listing(props) {\r\n  const [updateVisible, setUpdateVisible] = useState(false);\r\n  const [locationName, setLocationName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [ReviewVisible, setReviewVisible] = useState(false);\r\n  const [reviewText, setReviewText] = useState(\"\");\r\n  return (\r\n    <div style={{ border: '2px solid black' }}>\r\n      <h3>{props.name}</h3>\r\n      <h5>{props.address}</h5>\r\n      <h4>Reviews</h4>\r\n      {props.reviews?.map(function (outerObject) {\r\n        return (\r\n          <p>{outerObject.review}</p>\r\n        )\r\n      })}\r\n      <Button variant=\"primary\" onClick={function () {\r\n        setReviewVisible(!ReviewVisible);\r\n        setUpdateVisible(false);\r\n      }}>Add a Review</Button>\r\n      <Button variant=\"primary\" onClick={function () {\r\n        setUpdateVisible(!updateVisible);\r\n        setReviewVisible(false);\r\n      }}>Update Place</Button>\r\n      <Button variant=\"danger\" onClick={function (event) {\r\n        props.onDeletePlace(props.name);\r\n      }} > Delete Place</Button>\r\n      {updateVisible === true && ReviewVisible === false &&\r\n        <Form onSubmit={function (event) {\r\n          event.preventDefault();\r\n          props.onUpdatePlace(props.name, locationName, address);\r\n        }}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>New Name</Form.Label>\r\n            <Form.Control value={locationName} type=\"text\" onChange={function (event) {\r\n              setLocationName(event.target.value)\r\n            }}\r\n              placeholder=\"Enter Name\" />\r\n            <Form.Label>New Address</Form.Label>\r\n            <Form.Control value={address} type=\"text\" onChange={function (event) {\r\n              setAddress(event.target.value)\r\n            }}\r\n              placeholder=\"Address\" />\r\n            <Button type=\"submit\">Submit Changes</Button>\r\n          </Form.Group>\r\n\r\n        </Form>\r\n      }\r\n      {ReviewVisible === true && updateVisible === false &&\r\n        <Form onSubmit={function (event) {\r\n          event.preventDefault();\r\n          props.addReview(props.name, reviewText);\r\n        }}>\r\n          <Form.Control as=\"textarea\" value={reviewText} rows={3} placeholder=\"Enter Review\" onChange={function (event) {\r\n            setReviewText(event.target.value)\r\n          }} />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default Listing;","import Place from './Place';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Container } from 'react-bootstrap'\r\nimport places from '../data';\r\nimport Listing from './Listing';\r\n\r\nfunction Home() {\r\n    const [addPlaceVisible, setPlaceVisible] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([])\r\n    const [allPlaces, setAllPlaces] = useState([])\r\n\r\n    useEffect(function () {\r\n        async function getPlaces() {\r\n            const response = await fetch('https://brettbookbinder-mynearbyplaces.herokuapp.com/places')\r\n            const data = await response.json()\r\n            setAllPlaces(data)\r\n            console.log(data)\r\n        }\r\n        getPlaces()\r\n    }, [])\r\n\r\n\r\n    async function onAddPlace(name, address) {\r\n        //places.push({ name: name, address: address, reviews: [] });\r\n        const copy = allPlaces.slice()\r\n        const response = await fetch('https://brettbookbinder-mynearbyplaces.herokuapp.com/place', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                name: name,\r\n                address: address,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await response.json();\r\n        console.log(data);\r\n        copy.push(data);\r\n        setAllPlaces(copy);\r\n        if (searchTerm === \"\") {\r\n            setSearchResult([...searchResult, data])\r\n        }\r\n    }\r\n\r\n    async function addReview(name, review) {\r\n        console.log(name, review)\r\n        const allPlacesCopy = allPlaces.slice()\r\n        let updatePos = allPlacesCopy.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        let copy = Array.from(searchResult);\r\n        let updatePosResult = copy.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        console.log({ allPlacesCopy })\r\n        console.log({ copy })\r\n        allPlacesCopy[updatePos].reviews.push({ review: review });\r\n        copy[updatePosResult] = allPlacesCopy[updatePos];\r\n        setSearchResult(copy);\r\n        setAllPlaces(allPlacesCopy)\r\n        const response = await fetch(`https://brettbookbinder-mynearbyplaces.herokuapp.com/review/${name}`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                review: review\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await response.json();\r\n        console.log(data)\r\n    }\r\n\r\n    function onUpdatePlace(name, newName, newAddress) {\r\n        let updatePos = places.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        let copy = Array.from(searchResult);\r\n        let updatePosResult = copy.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        copy[updatePosResult].name = newName;\r\n        copy[updatePosResult].address = newAddress;\r\n        setSearchResult(copy);\r\n        places[updatePos].name = newName;\r\n        places[updatePos].address = newAddress;\r\n    }\r\n\r\n    function onDeletePlace(name) {\r\n        let deletePos = places.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        places.splice(deletePos, 1);\r\n        let copy = Array.from(searchResult);\r\n        let deletePosResult = copy.findIndex(function (place) {\r\n            if (name === place.name) {\r\n                return true;\r\n            }\r\n            return false;\r\n        })\r\n        copy.splice(deletePosResult, 1);\r\n        setSearchResult(copy);\r\n    }\r\n    async function onSearch(searchText) {\r\n        // let m = []\r\n        // for (var i = 0; i < allPlaces.length; i++) {\r\n        //     let current = allPlaces[i];\r\n        //     let match = current.name.includes(searchText);\r\n        //     if (match === true) {\r\n        //         m.push(current);\r\n        //     }\r\n        // }\r\n        if (searchText === \"\") {\r\n            setSearchResult(allPlaces)\r\n        }\r\n        else {\r\n        const response = await fetch(`https://brettbookbinder-mynearbyplaces.herokuapp.com/search/${searchText}/${searchText}`)\r\n        const data = await(response.json())\r\n        console.log(data)\r\n        setSearchResult(data)\r\n    }\r\n}\r\nreturn (\r\n    <Container fluid>\r\n        <h1>Nearby Places</h1>\r\n        <Button variant=\"primary\" onClick={function () {\r\n            setPlaceVisible(!addPlaceVisible)\r\n        }}>Add A Place</Button>\r\n        <Button variant=\"primary\" onClick={function () {\r\n            onSearch(\"\");\r\n        }}>Show All Places</Button>\r\n        {addPlaceVisible === true && <Place onAddPlace={onAddPlace} />}\r\n        <Form onSubmit={function (event) {\r\n            event.preventDefault();\r\n            onSearch(searchTerm);\r\n        }}>\r\n            <Form.Control onChange={function (event) {\r\n                setSearchTerm(event.target.value)\r\n            }}\r\n                value={searchTerm} size=\"lg\" type=\"text\" placeholder=\"Search for a place\" />\r\n            <Button type=\"submit\">Search</Button>\r\n        </Form>\r\n        {\r\n            searchResult.map(function (place) {\r\n                return (\r\n                    <Listing key={place.name} addReview={addReview} onUpdatePlace={onUpdatePlace} onDeletePlace={onDeletePlace} name={place.name} address={place.address} reviews={place.reviews} />\r\n                )\r\n            })\r\n        }\r\n    </Container>\r\n)\r\n}\r\n\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Home from './components/Home.js';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}